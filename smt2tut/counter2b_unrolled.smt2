(set-option :produce-models true)
(set-logic QF_ABV)
(define-fun |UNROLL#0| () Bool true)
(assert |UNROLL#0|)
(define-fun |UNROLL#1| () Bool true)
(assert |UNROLL#1|)
(assert true)
(declare-fun |UNROLL#3| () (_ BitVec 3))
(define-fun |UNROLL#2| () Bool (= |UNROLL#3| #b000) )
(assert |UNROLL#2|)
(declare-fun |UNROLL#4| () Bool)
(assert |UNROLL#4|)
(push 1)
(define-fun |UNROLL#7| () Bool (bvult |UNROLL#3| #b100))
(define-fun |UNROLL#6| () Bool (or |UNROLL#7| (not true)))
(define-fun |UNROLL#5| () Bool |UNROLL#6| )
(assert (not (and |UNROLL#5| true)))
; running check-sat..
(set-info :status unsat)
(check-sat)
(pop 1)
(define-fun |UNROLL#10| () Bool (bvult |UNROLL#3| #b100))
(define-fun |UNROLL#9| () Bool (or |UNROLL#10| (not true)))
(define-fun |UNROLL#8| () Bool |UNROLL#9| )
(assert |UNROLL#8|)
(assert true)
(define-fun |UNROLL#11| () Bool true)
(assert |UNROLL#11|)
(define-fun |UNROLL#12| () Bool true)
(assert |UNROLL#12|)
(assert true)
(define-fun |UNROLL#15| () (_ BitVec 3) (bvmul #b010 |UNROLL#3|))
(define-fun |UNROLL#14| () (_ BitVec 3) (bvadd |UNROLL#15| #b011))
(declare-fun |UNROLL#16| () (_ BitVec 3))
(define-fun |UNROLL#13| () Bool (= |UNROLL#14| |UNROLL#16|) )
(assert |UNROLL#13|)
(declare-fun |UNROLL#17| () Bool)
(assert (not |UNROLL#17|))
(push 1)
(define-fun |UNROLL#20| () Bool (bvult |UNROLL#16| #b100))
(define-fun |UNROLL#19| () Bool (or |UNROLL#20| (not true)))
(define-fun |UNROLL#18| () Bool |UNROLL#19| )
(assert (not (and |UNROLL#18| true)))
; running check-sat..
(set-info :status unsat)
(check-sat)
(pop 1)
(define-fun |UNROLL#23| () Bool (bvult |UNROLL#16| #b100))
(define-fun |UNROLL#22| () Bool (or |UNROLL#23| (not true)))
(define-fun |UNROLL#21| () Bool |UNROLL#22| )
(assert |UNROLL#21|)
(assert true)
(define-fun |UNROLL#24| () Bool true)
(assert |UNROLL#24|)
(define-fun |UNROLL#25| () Bool true)
(assert |UNROLL#25|)
(assert true)
(define-fun |UNROLL#28| () (_ BitVec 3) (bvmul #b010 |UNROLL#16|))
(define-fun |UNROLL#27| () (_ BitVec 3) (bvadd |UNROLL#28| #b011))
(declare-fun |UNROLL#29| () (_ BitVec 3))
(define-fun |UNROLL#26| () Bool (= |UNROLL#27| |UNROLL#29|) )
(assert |UNROLL#26|)
(declare-fun |UNROLL#30| () Bool)
(assert (not |UNROLL#30|))
(push 1)
(define-fun |UNROLL#33| () Bool (bvult |UNROLL#29| #b100))
(define-fun |UNROLL#32| () Bool (or |UNROLL#33| (not true)))
(define-fun |UNROLL#31| () Bool |UNROLL#32| )
(assert (not (and |UNROLL#31| true)))
; running check-sat..
(set-info :status unsat)
(check-sat)
(pop 1)
(define-fun |UNROLL#36| () Bool (bvult |UNROLL#29| #b100))
(define-fun |UNROLL#35| () Bool (or |UNROLL#36| (not true)))
(define-fun |UNROLL#34| () Bool |UNROLL#35| )
(assert |UNROLL#34|)
(assert true)
(define-fun |UNROLL#37| () Bool true)
(assert |UNROLL#37|)
(define-fun |UNROLL#38| () Bool true)
(assert |UNROLL#38|)
(assert true)
(define-fun |UNROLL#41| () (_ BitVec 3) (bvmul #b010 |UNROLL#29|))
(define-fun |UNROLL#40| () (_ BitVec 3) (bvadd |UNROLL#41| #b011))
(declare-fun |UNROLL#42| () (_ BitVec 3))
(define-fun |UNROLL#39| () Bool (= |UNROLL#40| |UNROLL#42|) )
(assert |UNROLL#39|)
(declare-fun |UNROLL#43| () Bool)
(assert (not |UNROLL#43|))
(push 1)
(define-fun |UNROLL#46| () Bool (bvult |UNROLL#42| #b100))
(define-fun |UNROLL#45| () Bool (or |UNROLL#46| (not true)))
(define-fun |UNROLL#44| () Bool |UNROLL#45| )
(assert (not (and |UNROLL#44| true)))
; running check-sat..
(set-info :status sat)
(check-sat)
(get-value (|UNROLL#44|))
(get-value (|UNROLL#45|))
(exit)
