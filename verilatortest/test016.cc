#include "Vtest016.h"

int error_count = 0;

void run_test(Vtest016 &tb, int a, const char *ref)
{
	char buffer1[128], buffer2[128];
	int p = 0;

	tb.a = a;
	tb.eval();

	for (int i = 8; i >= 0; i--, p++) {
		buffer1[p] = ((tb.y1 >> i) & 1) ? '1' : '0';
		buffer2[p] = ref[p] == 'x' || ref[p] == buffer1[p] ? ' ' : '^';
		if (buffer2[p] != ' ') error_count++;
	}

	buffer1[p] = ' ';
	buffer2[p++] = ' ';

	for (int i = 80; i >= 0; i--, p++) {
		buffer1[p] = ((tb.y2[i/32] >> (i%32)) & 1) ? '1' : '0';
		buffer2[p] = ref[p] == 'x' || ref[p] == buffer1[p] ? ' ' : '^';
		if (buffer2[p] != ' ') error_count++;
	}

	buffer1[p] = 0;
	buffer2[p] = 0;

	printf("== %d ==\n", a);
	printf("ref: %s\n", ref);
	printf("out: %s\n", buffer1);
	printf("     %s\n", buffer2);
}

int main() {
	Vtest016 tb;
	run_test(tb, 0, "10x000x0x xxxxxxxxxxx0xx0xx0x0xx0xx0xxxxxxx000xx0x10000x0xx01000xxx000xxxxx0000x10x0x000x01");
	run_test(tb, 1, "01x0000xx xxxxxxxxxxx0xx0xx0x0xx0xx0xxxxxxx000xx0x10000x0xx01000xxx000xxxxx0000x10x0x000x01");
	run_test(tb, 2, "00010xx0x xxxxxxxxxxx0xx0xx0x0xx0xx0xxxxxxx000xx0x10000x0xx01000xxx000xxxxx0000x10x0x000x01");
	run_test(tb, 3, "00001x0xx xxxxxxxxxxx0xx0xx0x0xx0xx0xxxxxxx000xx0x10000x0xx01000xxx000xxxxx0000x10x0x000x01");
	printf("Found %d bit errors.\n", error_count);
	tb.final();
	return 0;
}
