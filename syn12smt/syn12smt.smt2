(set-option :produce-models true)
(set-logic QF_UFBV)

(define-fun T () Bool true)
(define-fun F () Bool false)

(define-sort bv () (_ BitVec 13))
(declare-fun f0a () bv)
(declare-fun f0b () bv)
(declare-fun f1a (Bool Bool) bv)
(declare-fun f1b (Bool Bool) bv)
(declare-fun f2a (Bool Bool Bool Bool) bv)
(declare-fun f2b (Bool Bool Bool Bool) bv)
(declare-fun f3a (Bool Bool Bool Bool Bool Bool) bv)
(declare-fun f3b (Bool Bool Bool Bool Bool Bool) Bool)

(define-fun btcnt ((x bv)) bv (bvadd
(ite (= ((_ extract 0 0) x) #b1) #b0000000000001 #b0000000000000)
(ite (= ((_ extract 1 1) x) #b1) #b0000000000001 #b0000000000000)
(ite (= ((_ extract 2 2) x) #b1) #b0000000000001 #b0000000000000)
(ite (= ((_ extract 3 3) x) #b1) #b0000000000001 #b0000000000000)
(ite (= ((_ extract 4 4) x) #b1) #b0000000000001 #b0000000000000)
(ite (= ((_ extract 5 5) x) #b1) #b0000000000001 #b0000000000000)
(ite (= ((_ extract 6 6) x) #b1) #b0000000000001 #b0000000000000)
(ite (= ((_ extract 7 7) x) #b1) #b0000000000001 #b0000000000000)
(ite (= ((_ extract 8 8) x) #b1) #b0000000000001 #b0000000000000)
(ite (= ((_ extract 9 9) x) #b1) #b0000000000001 #b0000000000000)
(ite (= ((_ extract 10 10) x) #b1) #b0000000000001 #b0000000000000)
(ite (= ((_ extract 11 11) x) #b1) #b0000000000001 #b0000000000000)
(ite (= ((_ extract 12 12) x) #b1) #b0000000000001 #b0000000000000)
))

(define-fun secret_00 () bv #b0000000000001)
(define-fun sel0a_00 () bv (f0a))
(define-fun sel0b_00 () bv (f0b))
(assert (= #b0000000000000 (bvand sel0a_00 sel0b_00)))
(assert (= (btcnt sel0a_00) (btcnt sel0b_00)))
(define-fun res0x_00 () Bool (distinct #b0000000000000 (bvand sel0a_00 secret_00)))
(define-fun res0y_00 () Bool (distinct #b0000000000000 (bvand sel0b_00 secret_00)))
(define-fun res0a_00 () Bool (ite (= #b0 #b0) res0x_00 res0y_00))
(define-fun res0b_00 () Bool (ite (= #b0 #b0) res0y_00 res0x_00))
(define-fun sel1a_00 () bv (f1a res0a_00 res0b_00))
(define-fun sel1b_00 () bv (f1b res0a_00 res0b_00))
(assert (= #b0000000000000 (bvand sel1a_00 sel1b_00)))
(assert (= (btcnt sel1a_00) (btcnt sel1b_00)))
(define-fun res1x_00 () Bool (distinct #b0000000000000 (bvand sel1a_00 secret_00)))
(define-fun res1y_00 () Bool (distinct #b0000000000000 (bvand sel1b_00 secret_00)))
(define-fun res1a_00 () Bool (ite (= #b0 #b0) res1x_00 res1y_00))
(define-fun res1b_00 () Bool (ite (= #b0 #b0) res1y_00 res1x_00))
(define-fun sel2a_00 () bv (f2a res0a_00 res0b_00 res1a_00 res1b_00))
(define-fun sel2b_00 () bv (f2b res0a_00 res0b_00 res1a_00 res1b_00))
(assert (= #b0000000000000 (bvand sel2a_00 sel2b_00)))
(assert (= (btcnt sel2a_00) (btcnt sel2b_00)))
(define-fun res2x_00 () Bool (distinct #b0000000000000 (bvand sel2a_00 secret_00)))
(define-fun res2y_00 () Bool (distinct #b0000000000000 (bvand sel2b_00 secret_00)))
(define-fun res2a_00 () Bool (ite (= #b0 #b0) res2x_00 res2y_00))
(define-fun res2b_00 () Bool (ite (= #b0 #b0) res2y_00 res2x_00))
(define-fun sel3a_00 () bv (f3a res0a_00 res0b_00 res1a_00 res1b_00 res2a_00 res2b_00))
(define-fun sel3b_00 () Bool (f3b res0a_00 res0b_00 res1a_00 res1b_00 res2a_00 res2b_00))
(assert (= sel3b_00 (= #b1 #b0)))
(define-fun result_00 () bv sel3a_00)
(assert (= result_00 secret_00))

(define-fun secret_01 () bv #b0000000000001)
(define-fun sel0a_01 () bv (f0a))
(define-fun sel0b_01 () bv (f0b))
(assert (= #b0000000000000 (bvand sel0a_01 sel0b_01)))
(assert (= (btcnt sel0a_01) (btcnt sel0b_01)))
(define-fun res0x_01 () Bool (distinct #b0000000000000 (bvand sel0a_01 secret_01)))
(define-fun res0y_01 () Bool (distinct #b0000000000000 (bvand sel0b_01 secret_01)))
(define-fun res0a_01 () Bool (ite (= #b0 #b1) res0x_01 res0y_01))
(define-fun res0b_01 () Bool (ite (= #b0 #b1) res0y_01 res0x_01))
(define-fun sel1a_01 () bv (f1a res0a_01 res0b_01))
(define-fun sel1b_01 () bv (f1b res0a_01 res0b_01))
(assert (= #b0000000000000 (bvand sel1a_01 sel1b_01)))
(assert (= (btcnt sel1a_01) (btcnt sel1b_01)))
(define-fun res1x_01 () Bool (distinct #b0000000000000 (bvand sel1a_01 secret_01)))
(define-fun res1y_01 () Bool (distinct #b0000000000000 (bvand sel1b_01 secret_01)))
(define-fun res1a_01 () Bool (ite (= #b0 #b1) res1x_01 res1y_01))
(define-fun res1b_01 () Bool (ite (= #b0 #b1) res1y_01 res1x_01))
(define-fun sel2a_01 () bv (f2a res0a_01 res0b_01 res1a_01 res1b_01))
(define-fun sel2b_01 () bv (f2b res0a_01 res0b_01 res1a_01 res1b_01))
(assert (= #b0000000000000 (bvand sel2a_01 sel2b_01)))
(assert (= (btcnt sel2a_01) (btcnt sel2b_01)))
(define-fun res2x_01 () Bool (distinct #b0000000000000 (bvand sel2a_01 secret_01)))
(define-fun res2y_01 () Bool (distinct #b0000000000000 (bvand sel2b_01 secret_01)))
(define-fun res2a_01 () Bool (ite (= #b0 #b1) res2x_01 res2y_01))
(define-fun res2b_01 () Bool (ite (= #b0 #b1) res2y_01 res2x_01))
(define-fun sel3a_01 () bv (f3a res0a_01 res0b_01 res1a_01 res1b_01 res2a_01 res2b_01))
(define-fun sel3b_01 () Bool (f3b res0a_01 res0b_01 res1a_01 res1b_01 res2a_01 res2b_01))
(assert (= sel3b_01 (= #b1 #b1)))
(define-fun result_01 () bv sel3a_01)
(assert (= result_01 secret_01))

(define-fun secret_10 () bv #b0000000000010)
(define-fun sel0a_10 () bv (f0a))
(define-fun sel0b_10 () bv (f0b))
(assert (= #b0000000000000 (bvand sel0a_10 sel0b_10)))
(assert (= (btcnt sel0a_10) (btcnt sel0b_10)))
(define-fun res0x_10 () Bool (distinct #b0000000000000 (bvand sel0a_10 secret_10)))
(define-fun res0y_10 () Bool (distinct #b0000000000000 (bvand sel0b_10 secret_10)))
(define-fun res0a_10 () Bool (ite (= #b0 #b0) res0x_10 res0y_10))
(define-fun res0b_10 () Bool (ite (= #b0 #b0) res0y_10 res0x_10))
(define-fun sel1a_10 () bv (f1a res0a_10 res0b_10))
(define-fun sel1b_10 () bv (f1b res0a_10 res0b_10))
(assert (= #b0000000000000 (bvand sel1a_10 sel1b_10)))
(assert (= (btcnt sel1a_10) (btcnt sel1b_10)))
(define-fun res1x_10 () Bool (distinct #b0000000000000 (bvand sel1a_10 secret_10)))
(define-fun res1y_10 () Bool (distinct #b0000000000000 (bvand sel1b_10 secret_10)))
(define-fun res1a_10 () Bool (ite (= #b0 #b0) res1x_10 res1y_10))
(define-fun res1b_10 () Bool (ite (= #b0 #b0) res1y_10 res1x_10))
(define-fun sel2a_10 () bv (f2a res0a_10 res0b_10 res1a_10 res1b_10))
(define-fun sel2b_10 () bv (f2b res0a_10 res0b_10 res1a_10 res1b_10))
(assert (= #b0000000000000 (bvand sel2a_10 sel2b_10)))
(assert (= (btcnt sel2a_10) (btcnt sel2b_10)))
(define-fun res2x_10 () Bool (distinct #b0000000000000 (bvand sel2a_10 secret_10)))
(define-fun res2y_10 () Bool (distinct #b0000000000000 (bvand sel2b_10 secret_10)))
(define-fun res2a_10 () Bool (ite (= #b0 #b0) res2x_10 res2y_10))
(define-fun res2b_10 () Bool (ite (= #b0 #b0) res2y_10 res2x_10))
(define-fun sel3a_10 () bv (f3a res0a_10 res0b_10 res1a_10 res1b_10 res2a_10 res2b_10))
(define-fun sel3b_10 () Bool (f3b res0a_10 res0b_10 res1a_10 res1b_10 res2a_10 res2b_10))
(assert (= sel3b_10 (= #b1 #b0)))
(define-fun result_10 () bv sel3a_10)
(assert (= result_10 secret_10))

(define-fun secret_11 () bv #b0000000000010)
(define-fun sel0a_11 () bv (f0a))
(define-fun sel0b_11 () bv (f0b))
(assert (= #b0000000000000 (bvand sel0a_11 sel0b_11)))
(assert (= (btcnt sel0a_11) (btcnt sel0b_11)))
(define-fun res0x_11 () Bool (distinct #b0000000000000 (bvand sel0a_11 secret_11)))
(define-fun res0y_11 () Bool (distinct #b0000000000000 (bvand sel0b_11 secret_11)))
(define-fun res0a_11 () Bool (ite (= #b0 #b1) res0x_11 res0y_11))
(define-fun res0b_11 () Bool (ite (= #b0 #b1) res0y_11 res0x_11))
(define-fun sel1a_11 () bv (f1a res0a_11 res0b_11))
(define-fun sel1b_11 () bv (f1b res0a_11 res0b_11))
(assert (= #b0000000000000 (bvand sel1a_11 sel1b_11)))
(assert (= (btcnt sel1a_11) (btcnt sel1b_11)))
(define-fun res1x_11 () Bool (distinct #b0000000000000 (bvand sel1a_11 secret_11)))
(define-fun res1y_11 () Bool (distinct #b0000000000000 (bvand sel1b_11 secret_11)))
(define-fun res1a_11 () Bool (ite (= #b0 #b1) res1x_11 res1y_11))
(define-fun res1b_11 () Bool (ite (= #b0 #b1) res1y_11 res1x_11))
(define-fun sel2a_11 () bv (f2a res0a_11 res0b_11 res1a_11 res1b_11))
(define-fun sel2b_11 () bv (f2b res0a_11 res0b_11 res1a_11 res1b_11))
(assert (= #b0000000000000 (bvand sel2a_11 sel2b_11)))
(assert (= (btcnt sel2a_11) (btcnt sel2b_11)))
(define-fun res2x_11 () Bool (distinct #b0000000000000 (bvand sel2a_11 secret_11)))
(define-fun res2y_11 () Bool (distinct #b0000000000000 (bvand sel2b_11 secret_11)))
(define-fun res2a_11 () Bool (ite (= #b0 #b1) res2x_11 res2y_11))
(define-fun res2b_11 () Bool (ite (= #b0 #b1) res2y_11 res2x_11))
(define-fun sel3a_11 () bv (f3a res0a_11 res0b_11 res1a_11 res1b_11 res2a_11 res2b_11))
(define-fun sel3b_11 () Bool (f3b res0a_11 res0b_11 res1a_11 res1b_11 res2a_11 res2b_11))
(assert (= sel3b_11 (= #b1 #b1)))
(define-fun result_11 () bv sel3a_11)
(assert (= result_11 secret_11))

(define-fun secret_20 () bv #b0000000000100)
(define-fun sel0a_20 () bv (f0a))
(define-fun sel0b_20 () bv (f0b))
(assert (= #b0000000000000 (bvand sel0a_20 sel0b_20)))
(assert (= (btcnt sel0a_20) (btcnt sel0b_20)))
(define-fun res0x_20 () Bool (distinct #b0000000000000 (bvand sel0a_20 secret_20)))
(define-fun res0y_20 () Bool (distinct #b0000000000000 (bvand sel0b_20 secret_20)))
(define-fun res0a_20 () Bool (ite (= #b0 #b0) res0x_20 res0y_20))
(define-fun res0b_20 () Bool (ite (= #b0 #b0) res0y_20 res0x_20))
(define-fun sel1a_20 () bv (f1a res0a_20 res0b_20))
(define-fun sel1b_20 () bv (f1b res0a_20 res0b_20))
(assert (= #b0000000000000 (bvand sel1a_20 sel1b_20)))
(assert (= (btcnt sel1a_20) (btcnt sel1b_20)))
(define-fun res1x_20 () Bool (distinct #b0000000000000 (bvand sel1a_20 secret_20)))
(define-fun res1y_20 () Bool (distinct #b0000000000000 (bvand sel1b_20 secret_20)))
(define-fun res1a_20 () Bool (ite (= #b0 #b0) res1x_20 res1y_20))
(define-fun res1b_20 () Bool (ite (= #b0 #b0) res1y_20 res1x_20))
(define-fun sel2a_20 () bv (f2a res0a_20 res0b_20 res1a_20 res1b_20))
(define-fun sel2b_20 () bv (f2b res0a_20 res0b_20 res1a_20 res1b_20))
(assert (= #b0000000000000 (bvand sel2a_20 sel2b_20)))
(assert (= (btcnt sel2a_20) (btcnt sel2b_20)))
(define-fun res2x_20 () Bool (distinct #b0000000000000 (bvand sel2a_20 secret_20)))
(define-fun res2y_20 () Bool (distinct #b0000000000000 (bvand sel2b_20 secret_20)))
(define-fun res2a_20 () Bool (ite (= #b0 #b0) res2x_20 res2y_20))
(define-fun res2b_20 () Bool (ite (= #b0 #b0) res2y_20 res2x_20))
(define-fun sel3a_20 () bv (f3a res0a_20 res0b_20 res1a_20 res1b_20 res2a_20 res2b_20))
(define-fun sel3b_20 () Bool (f3b res0a_20 res0b_20 res1a_20 res1b_20 res2a_20 res2b_20))
(assert (= sel3b_20 (= #b1 #b0)))
(define-fun result_20 () bv sel3a_20)
(assert (= result_20 secret_20))

(define-fun secret_21 () bv #b0000000000100)
(define-fun sel0a_21 () bv (f0a))
(define-fun sel0b_21 () bv (f0b))
(assert (= #b0000000000000 (bvand sel0a_21 sel0b_21)))
(assert (= (btcnt sel0a_21) (btcnt sel0b_21)))
(define-fun res0x_21 () Bool (distinct #b0000000000000 (bvand sel0a_21 secret_21)))
(define-fun res0y_21 () Bool (distinct #b0000000000000 (bvand sel0b_21 secret_21)))
(define-fun res0a_21 () Bool (ite (= #b0 #b1) res0x_21 res0y_21))
(define-fun res0b_21 () Bool (ite (= #b0 #b1) res0y_21 res0x_21))
(define-fun sel1a_21 () bv (f1a res0a_21 res0b_21))
(define-fun sel1b_21 () bv (f1b res0a_21 res0b_21))
(assert (= #b0000000000000 (bvand sel1a_21 sel1b_21)))
(assert (= (btcnt sel1a_21) (btcnt sel1b_21)))
(define-fun res1x_21 () Bool (distinct #b0000000000000 (bvand sel1a_21 secret_21)))
(define-fun res1y_21 () Bool (distinct #b0000000000000 (bvand sel1b_21 secret_21)))
(define-fun res1a_21 () Bool (ite (= #b0 #b1) res1x_21 res1y_21))
(define-fun res1b_21 () Bool (ite (= #b0 #b1) res1y_21 res1x_21))
(define-fun sel2a_21 () bv (f2a res0a_21 res0b_21 res1a_21 res1b_21))
(define-fun sel2b_21 () bv (f2b res0a_21 res0b_21 res1a_21 res1b_21))
(assert (= #b0000000000000 (bvand sel2a_21 sel2b_21)))
(assert (= (btcnt sel2a_21) (btcnt sel2b_21)))
(define-fun res2x_21 () Bool (distinct #b0000000000000 (bvand sel2a_21 secret_21)))
(define-fun res2y_21 () Bool (distinct #b0000000000000 (bvand sel2b_21 secret_21)))
(define-fun res2a_21 () Bool (ite (= #b0 #b1) res2x_21 res2y_21))
(define-fun res2b_21 () Bool (ite (= #b0 #b1) res2y_21 res2x_21))
(define-fun sel3a_21 () bv (f3a res0a_21 res0b_21 res1a_21 res1b_21 res2a_21 res2b_21))
(define-fun sel3b_21 () Bool (f3b res0a_21 res0b_21 res1a_21 res1b_21 res2a_21 res2b_21))
(assert (= sel3b_21 (= #b1 #b1)))
(define-fun result_21 () bv sel3a_21)
(assert (= result_21 secret_21))

(define-fun secret_30 () bv #b0000000001000)
(define-fun sel0a_30 () bv (f0a))
(define-fun sel0b_30 () bv (f0b))
(assert (= #b0000000000000 (bvand sel0a_30 sel0b_30)))
(assert (= (btcnt sel0a_30) (btcnt sel0b_30)))
(define-fun res0x_30 () Bool (distinct #b0000000000000 (bvand sel0a_30 secret_30)))
(define-fun res0y_30 () Bool (distinct #b0000000000000 (bvand sel0b_30 secret_30)))
(define-fun res0a_30 () Bool (ite (= #b0 #b0) res0x_30 res0y_30))
(define-fun res0b_30 () Bool (ite (= #b0 #b0) res0y_30 res0x_30))
(define-fun sel1a_30 () bv (f1a res0a_30 res0b_30))
(define-fun sel1b_30 () bv (f1b res0a_30 res0b_30))
(assert (= #b0000000000000 (bvand sel1a_30 sel1b_30)))
(assert (= (btcnt sel1a_30) (btcnt sel1b_30)))
(define-fun res1x_30 () Bool (distinct #b0000000000000 (bvand sel1a_30 secret_30)))
(define-fun res1y_30 () Bool (distinct #b0000000000000 (bvand sel1b_30 secret_30)))
(define-fun res1a_30 () Bool (ite (= #b0 #b0) res1x_30 res1y_30))
(define-fun res1b_30 () Bool (ite (= #b0 #b0) res1y_30 res1x_30))
(define-fun sel2a_30 () bv (f2a res0a_30 res0b_30 res1a_30 res1b_30))
(define-fun sel2b_30 () bv (f2b res0a_30 res0b_30 res1a_30 res1b_30))
(assert (= #b0000000000000 (bvand sel2a_30 sel2b_30)))
(assert (= (btcnt sel2a_30) (btcnt sel2b_30)))
(define-fun res2x_30 () Bool (distinct #b0000000000000 (bvand sel2a_30 secret_30)))
(define-fun res2y_30 () Bool (distinct #b0000000000000 (bvand sel2b_30 secret_30)))
(define-fun res2a_30 () Bool (ite (= #b0 #b0) res2x_30 res2y_30))
(define-fun res2b_30 () Bool (ite (= #b0 #b0) res2y_30 res2x_30))
(define-fun sel3a_30 () bv (f3a res0a_30 res0b_30 res1a_30 res1b_30 res2a_30 res2b_30))
(define-fun sel3b_30 () Bool (f3b res0a_30 res0b_30 res1a_30 res1b_30 res2a_30 res2b_30))
(assert (= sel3b_30 (= #b1 #b0)))
(define-fun result_30 () bv sel3a_30)
(assert (= result_30 secret_30))

(define-fun secret_31 () bv #b0000000001000)
(define-fun sel0a_31 () bv (f0a))
(define-fun sel0b_31 () bv (f0b))
(assert (= #b0000000000000 (bvand sel0a_31 sel0b_31)))
(assert (= (btcnt sel0a_31) (btcnt sel0b_31)))
(define-fun res0x_31 () Bool (distinct #b0000000000000 (bvand sel0a_31 secret_31)))
(define-fun res0y_31 () Bool (distinct #b0000000000000 (bvand sel0b_31 secret_31)))
(define-fun res0a_31 () Bool (ite (= #b0 #b1) res0x_31 res0y_31))
(define-fun res0b_31 () Bool (ite (= #b0 #b1) res0y_31 res0x_31))
(define-fun sel1a_31 () bv (f1a res0a_31 res0b_31))
(define-fun sel1b_31 () bv (f1b res0a_31 res0b_31))
(assert (= #b0000000000000 (bvand sel1a_31 sel1b_31)))
(assert (= (btcnt sel1a_31) (btcnt sel1b_31)))
(define-fun res1x_31 () Bool (distinct #b0000000000000 (bvand sel1a_31 secret_31)))
(define-fun res1y_31 () Bool (distinct #b0000000000000 (bvand sel1b_31 secret_31)))
(define-fun res1a_31 () Bool (ite (= #b0 #b1) res1x_31 res1y_31))
(define-fun res1b_31 () Bool (ite (= #b0 #b1) res1y_31 res1x_31))
(define-fun sel2a_31 () bv (f2a res0a_31 res0b_31 res1a_31 res1b_31))
(define-fun sel2b_31 () bv (f2b res0a_31 res0b_31 res1a_31 res1b_31))
(assert (= #b0000000000000 (bvand sel2a_31 sel2b_31)))
(assert (= (btcnt sel2a_31) (btcnt sel2b_31)))
(define-fun res2x_31 () Bool (distinct #b0000000000000 (bvand sel2a_31 secret_31)))
(define-fun res2y_31 () Bool (distinct #b0000000000000 (bvand sel2b_31 secret_31)))
(define-fun res2a_31 () Bool (ite (= #b0 #b1) res2x_31 res2y_31))
(define-fun res2b_31 () Bool (ite (= #b0 #b1) res2y_31 res2x_31))
(define-fun sel3a_31 () bv (f3a res0a_31 res0b_31 res1a_31 res1b_31 res2a_31 res2b_31))
(define-fun sel3b_31 () Bool (f3b res0a_31 res0b_31 res1a_31 res1b_31 res2a_31 res2b_31))
(assert (= sel3b_31 (= #b1 #b1)))
(define-fun result_31 () bv sel3a_31)
(assert (= result_31 secret_31))

(define-fun secret_40 () bv #b0000000010000)
(define-fun sel0a_40 () bv (f0a))
(define-fun sel0b_40 () bv (f0b))
(assert (= #b0000000000000 (bvand sel0a_40 sel0b_40)))
(assert (= (btcnt sel0a_40) (btcnt sel0b_40)))
(define-fun res0x_40 () Bool (distinct #b0000000000000 (bvand sel0a_40 secret_40)))
(define-fun res0y_40 () Bool (distinct #b0000000000000 (bvand sel0b_40 secret_40)))
(define-fun res0a_40 () Bool (ite (= #b0 #b0) res0x_40 res0y_40))
(define-fun res0b_40 () Bool (ite (= #b0 #b0) res0y_40 res0x_40))
(define-fun sel1a_40 () bv (f1a res0a_40 res0b_40))
(define-fun sel1b_40 () bv (f1b res0a_40 res0b_40))
(assert (= #b0000000000000 (bvand sel1a_40 sel1b_40)))
(assert (= (btcnt sel1a_40) (btcnt sel1b_40)))
(define-fun res1x_40 () Bool (distinct #b0000000000000 (bvand sel1a_40 secret_40)))
(define-fun res1y_40 () Bool (distinct #b0000000000000 (bvand sel1b_40 secret_40)))
(define-fun res1a_40 () Bool (ite (= #b0 #b0) res1x_40 res1y_40))
(define-fun res1b_40 () Bool (ite (= #b0 #b0) res1y_40 res1x_40))
(define-fun sel2a_40 () bv (f2a res0a_40 res0b_40 res1a_40 res1b_40))
(define-fun sel2b_40 () bv (f2b res0a_40 res0b_40 res1a_40 res1b_40))
(assert (= #b0000000000000 (bvand sel2a_40 sel2b_40)))
(assert (= (btcnt sel2a_40) (btcnt sel2b_40)))
(define-fun res2x_40 () Bool (distinct #b0000000000000 (bvand sel2a_40 secret_40)))
(define-fun res2y_40 () Bool (distinct #b0000000000000 (bvand sel2b_40 secret_40)))
(define-fun res2a_40 () Bool (ite (= #b0 #b0) res2x_40 res2y_40))
(define-fun res2b_40 () Bool (ite (= #b0 #b0) res2y_40 res2x_40))
(define-fun sel3a_40 () bv (f3a res0a_40 res0b_40 res1a_40 res1b_40 res2a_40 res2b_40))
(define-fun sel3b_40 () Bool (f3b res0a_40 res0b_40 res1a_40 res1b_40 res2a_40 res2b_40))
(assert (= sel3b_40 (= #b1 #b0)))
(define-fun result_40 () bv sel3a_40)
(assert (= result_40 secret_40))

(define-fun secret_41 () bv #b0000000010000)
(define-fun sel0a_41 () bv (f0a))
(define-fun sel0b_41 () bv (f0b))
(assert (= #b0000000000000 (bvand sel0a_41 sel0b_41)))
(assert (= (btcnt sel0a_41) (btcnt sel0b_41)))
(define-fun res0x_41 () Bool (distinct #b0000000000000 (bvand sel0a_41 secret_41)))
(define-fun res0y_41 () Bool (distinct #b0000000000000 (bvand sel0b_41 secret_41)))
(define-fun res0a_41 () Bool (ite (= #b0 #b1) res0x_41 res0y_41))
(define-fun res0b_41 () Bool (ite (= #b0 #b1) res0y_41 res0x_41))
(define-fun sel1a_41 () bv (f1a res0a_41 res0b_41))
(define-fun sel1b_41 () bv (f1b res0a_41 res0b_41))
(assert (= #b0000000000000 (bvand sel1a_41 sel1b_41)))
(assert (= (btcnt sel1a_41) (btcnt sel1b_41)))
(define-fun res1x_41 () Bool (distinct #b0000000000000 (bvand sel1a_41 secret_41)))
(define-fun res1y_41 () Bool (distinct #b0000000000000 (bvand sel1b_41 secret_41)))
(define-fun res1a_41 () Bool (ite (= #b0 #b1) res1x_41 res1y_41))
(define-fun res1b_41 () Bool (ite (= #b0 #b1) res1y_41 res1x_41))
(define-fun sel2a_41 () bv (f2a res0a_41 res0b_41 res1a_41 res1b_41))
(define-fun sel2b_41 () bv (f2b res0a_41 res0b_41 res1a_41 res1b_41))
(assert (= #b0000000000000 (bvand sel2a_41 sel2b_41)))
(assert (= (btcnt sel2a_41) (btcnt sel2b_41)))
(define-fun res2x_41 () Bool (distinct #b0000000000000 (bvand sel2a_41 secret_41)))
(define-fun res2y_41 () Bool (distinct #b0000000000000 (bvand sel2b_41 secret_41)))
(define-fun res2a_41 () Bool (ite (= #b0 #b1) res2x_41 res2y_41))
(define-fun res2b_41 () Bool (ite (= #b0 #b1) res2y_41 res2x_41))
(define-fun sel3a_41 () bv (f3a res0a_41 res0b_41 res1a_41 res1b_41 res2a_41 res2b_41))
(define-fun sel3b_41 () Bool (f3b res0a_41 res0b_41 res1a_41 res1b_41 res2a_41 res2b_41))
(assert (= sel3b_41 (= #b1 #b1)))
(define-fun result_41 () bv sel3a_41)
(assert (= result_41 secret_41))

(define-fun secret_50 () bv #b0000000100000)
(define-fun sel0a_50 () bv (f0a))
(define-fun sel0b_50 () bv (f0b))
(assert (= #b0000000000000 (bvand sel0a_50 sel0b_50)))
(assert (= (btcnt sel0a_50) (btcnt sel0b_50)))
(define-fun res0x_50 () Bool (distinct #b0000000000000 (bvand sel0a_50 secret_50)))
(define-fun res0y_50 () Bool (distinct #b0000000000000 (bvand sel0b_50 secret_50)))
(define-fun res0a_50 () Bool (ite (= #b0 #b0) res0x_50 res0y_50))
(define-fun res0b_50 () Bool (ite (= #b0 #b0) res0y_50 res0x_50))
(define-fun sel1a_50 () bv (f1a res0a_50 res0b_50))
(define-fun sel1b_50 () bv (f1b res0a_50 res0b_50))
(assert (= #b0000000000000 (bvand sel1a_50 sel1b_50)))
(assert (= (btcnt sel1a_50) (btcnt sel1b_50)))
(define-fun res1x_50 () Bool (distinct #b0000000000000 (bvand sel1a_50 secret_50)))
(define-fun res1y_50 () Bool (distinct #b0000000000000 (bvand sel1b_50 secret_50)))
(define-fun res1a_50 () Bool (ite (= #b0 #b0) res1x_50 res1y_50))
(define-fun res1b_50 () Bool (ite (= #b0 #b0) res1y_50 res1x_50))
(define-fun sel2a_50 () bv (f2a res0a_50 res0b_50 res1a_50 res1b_50))
(define-fun sel2b_50 () bv (f2b res0a_50 res0b_50 res1a_50 res1b_50))
(assert (= #b0000000000000 (bvand sel2a_50 sel2b_50)))
(assert (= (btcnt sel2a_50) (btcnt sel2b_50)))
(define-fun res2x_50 () Bool (distinct #b0000000000000 (bvand sel2a_50 secret_50)))
(define-fun res2y_50 () Bool (distinct #b0000000000000 (bvand sel2b_50 secret_50)))
(define-fun res2a_50 () Bool (ite (= #b0 #b0) res2x_50 res2y_50))
(define-fun res2b_50 () Bool (ite (= #b0 #b0) res2y_50 res2x_50))
(define-fun sel3a_50 () bv (f3a res0a_50 res0b_50 res1a_50 res1b_50 res2a_50 res2b_50))
(define-fun sel3b_50 () Bool (f3b res0a_50 res0b_50 res1a_50 res1b_50 res2a_50 res2b_50))
(assert (= sel3b_50 (= #b1 #b0)))
(define-fun result_50 () bv sel3a_50)
(assert (= result_50 secret_50))

(define-fun secret_51 () bv #b0000000100000)
(define-fun sel0a_51 () bv (f0a))
(define-fun sel0b_51 () bv (f0b))
(assert (= #b0000000000000 (bvand sel0a_51 sel0b_51)))
(assert (= (btcnt sel0a_51) (btcnt sel0b_51)))
(define-fun res0x_51 () Bool (distinct #b0000000000000 (bvand sel0a_51 secret_51)))
(define-fun res0y_51 () Bool (distinct #b0000000000000 (bvand sel0b_51 secret_51)))
(define-fun res0a_51 () Bool (ite (= #b0 #b1) res0x_51 res0y_51))
(define-fun res0b_51 () Bool (ite (= #b0 #b1) res0y_51 res0x_51))
(define-fun sel1a_51 () bv (f1a res0a_51 res0b_51))
(define-fun sel1b_51 () bv (f1b res0a_51 res0b_51))
(assert (= #b0000000000000 (bvand sel1a_51 sel1b_51)))
(assert (= (btcnt sel1a_51) (btcnt sel1b_51)))
(define-fun res1x_51 () Bool (distinct #b0000000000000 (bvand sel1a_51 secret_51)))
(define-fun res1y_51 () Bool (distinct #b0000000000000 (bvand sel1b_51 secret_51)))
(define-fun res1a_51 () Bool (ite (= #b0 #b1) res1x_51 res1y_51))
(define-fun res1b_51 () Bool (ite (= #b0 #b1) res1y_51 res1x_51))
(define-fun sel2a_51 () bv (f2a res0a_51 res0b_51 res1a_51 res1b_51))
(define-fun sel2b_51 () bv (f2b res0a_51 res0b_51 res1a_51 res1b_51))
(assert (= #b0000000000000 (bvand sel2a_51 sel2b_51)))
(assert (= (btcnt sel2a_51) (btcnt sel2b_51)))
(define-fun res2x_51 () Bool (distinct #b0000000000000 (bvand sel2a_51 secret_51)))
(define-fun res2y_51 () Bool (distinct #b0000000000000 (bvand sel2b_51 secret_51)))
(define-fun res2a_51 () Bool (ite (= #b0 #b1) res2x_51 res2y_51))
(define-fun res2b_51 () Bool (ite (= #b0 #b1) res2y_51 res2x_51))
(define-fun sel3a_51 () bv (f3a res0a_51 res0b_51 res1a_51 res1b_51 res2a_51 res2b_51))
(define-fun sel3b_51 () Bool (f3b res0a_51 res0b_51 res1a_51 res1b_51 res2a_51 res2b_51))
(assert (= sel3b_51 (= #b1 #b1)))
(define-fun result_51 () bv sel3a_51)
(assert (= result_51 secret_51))

(define-fun secret_60 () bv #b0000001000000)
(define-fun sel0a_60 () bv (f0a))
(define-fun sel0b_60 () bv (f0b))
(assert (= #b0000000000000 (bvand sel0a_60 sel0b_60)))
(assert (= (btcnt sel0a_60) (btcnt sel0b_60)))
(define-fun res0x_60 () Bool (distinct #b0000000000000 (bvand sel0a_60 secret_60)))
(define-fun res0y_60 () Bool (distinct #b0000000000000 (bvand sel0b_60 secret_60)))
(define-fun res0a_60 () Bool (ite (= #b0 #b0) res0x_60 res0y_60))
(define-fun res0b_60 () Bool (ite (= #b0 #b0) res0y_60 res0x_60))
(define-fun sel1a_60 () bv (f1a res0a_60 res0b_60))
(define-fun sel1b_60 () bv (f1b res0a_60 res0b_60))
(assert (= #b0000000000000 (bvand sel1a_60 sel1b_60)))
(assert (= (btcnt sel1a_60) (btcnt sel1b_60)))
(define-fun res1x_60 () Bool (distinct #b0000000000000 (bvand sel1a_60 secret_60)))
(define-fun res1y_60 () Bool (distinct #b0000000000000 (bvand sel1b_60 secret_60)))
(define-fun res1a_60 () Bool (ite (= #b0 #b0) res1x_60 res1y_60))
(define-fun res1b_60 () Bool (ite (= #b0 #b0) res1y_60 res1x_60))
(define-fun sel2a_60 () bv (f2a res0a_60 res0b_60 res1a_60 res1b_60))
(define-fun sel2b_60 () bv (f2b res0a_60 res0b_60 res1a_60 res1b_60))
(assert (= #b0000000000000 (bvand sel2a_60 sel2b_60)))
(assert (= (btcnt sel2a_60) (btcnt sel2b_60)))
(define-fun res2x_60 () Bool (distinct #b0000000000000 (bvand sel2a_60 secret_60)))
(define-fun res2y_60 () Bool (distinct #b0000000000000 (bvand sel2b_60 secret_60)))
(define-fun res2a_60 () Bool (ite (= #b0 #b0) res2x_60 res2y_60))
(define-fun res2b_60 () Bool (ite (= #b0 #b0) res2y_60 res2x_60))
(define-fun sel3a_60 () bv (f3a res0a_60 res0b_60 res1a_60 res1b_60 res2a_60 res2b_60))
(define-fun sel3b_60 () Bool (f3b res0a_60 res0b_60 res1a_60 res1b_60 res2a_60 res2b_60))
(assert (= sel3b_60 (= #b1 #b0)))
(define-fun result_60 () bv sel3a_60)
(assert (= result_60 secret_60))

(define-fun secret_61 () bv #b0000001000000)
(define-fun sel0a_61 () bv (f0a))
(define-fun sel0b_61 () bv (f0b))
(assert (= #b0000000000000 (bvand sel0a_61 sel0b_61)))
(assert (= (btcnt sel0a_61) (btcnt sel0b_61)))
(define-fun res0x_61 () Bool (distinct #b0000000000000 (bvand sel0a_61 secret_61)))
(define-fun res0y_61 () Bool (distinct #b0000000000000 (bvand sel0b_61 secret_61)))
(define-fun res0a_61 () Bool (ite (= #b0 #b1) res0x_61 res0y_61))
(define-fun res0b_61 () Bool (ite (= #b0 #b1) res0y_61 res0x_61))
(define-fun sel1a_61 () bv (f1a res0a_61 res0b_61))
(define-fun sel1b_61 () bv (f1b res0a_61 res0b_61))
(assert (= #b0000000000000 (bvand sel1a_61 sel1b_61)))
(assert (= (btcnt sel1a_61) (btcnt sel1b_61)))
(define-fun res1x_61 () Bool (distinct #b0000000000000 (bvand sel1a_61 secret_61)))
(define-fun res1y_61 () Bool (distinct #b0000000000000 (bvand sel1b_61 secret_61)))
(define-fun res1a_61 () Bool (ite (= #b0 #b1) res1x_61 res1y_61))
(define-fun res1b_61 () Bool (ite (= #b0 #b1) res1y_61 res1x_61))
(define-fun sel2a_61 () bv (f2a res0a_61 res0b_61 res1a_61 res1b_61))
(define-fun sel2b_61 () bv (f2b res0a_61 res0b_61 res1a_61 res1b_61))
(assert (= #b0000000000000 (bvand sel2a_61 sel2b_61)))
(assert (= (btcnt sel2a_61) (btcnt sel2b_61)))
(define-fun res2x_61 () Bool (distinct #b0000000000000 (bvand sel2a_61 secret_61)))
(define-fun res2y_61 () Bool (distinct #b0000000000000 (bvand sel2b_61 secret_61)))
(define-fun res2a_61 () Bool (ite (= #b0 #b1) res2x_61 res2y_61))
(define-fun res2b_61 () Bool (ite (= #b0 #b1) res2y_61 res2x_61))
(define-fun sel3a_61 () bv (f3a res0a_61 res0b_61 res1a_61 res1b_61 res2a_61 res2b_61))
(define-fun sel3b_61 () Bool (f3b res0a_61 res0b_61 res1a_61 res1b_61 res2a_61 res2b_61))
(assert (= sel3b_61 (= #b1 #b1)))
(define-fun result_61 () bv sel3a_61)
(assert (= result_61 secret_61))

(define-fun secret_70 () bv #b0000010000000)
(define-fun sel0a_70 () bv (f0a))
(define-fun sel0b_70 () bv (f0b))
(assert (= #b0000000000000 (bvand sel0a_70 sel0b_70)))
(assert (= (btcnt sel0a_70) (btcnt sel0b_70)))
(define-fun res0x_70 () Bool (distinct #b0000000000000 (bvand sel0a_70 secret_70)))
(define-fun res0y_70 () Bool (distinct #b0000000000000 (bvand sel0b_70 secret_70)))
(define-fun res0a_70 () Bool (ite (= #b0 #b0) res0x_70 res0y_70))
(define-fun res0b_70 () Bool (ite (= #b0 #b0) res0y_70 res0x_70))
(define-fun sel1a_70 () bv (f1a res0a_70 res0b_70))
(define-fun sel1b_70 () bv (f1b res0a_70 res0b_70))
(assert (= #b0000000000000 (bvand sel1a_70 sel1b_70)))
(assert (= (btcnt sel1a_70) (btcnt sel1b_70)))
(define-fun res1x_70 () Bool (distinct #b0000000000000 (bvand sel1a_70 secret_70)))
(define-fun res1y_70 () Bool (distinct #b0000000000000 (bvand sel1b_70 secret_70)))
(define-fun res1a_70 () Bool (ite (= #b0 #b0) res1x_70 res1y_70))
(define-fun res1b_70 () Bool (ite (= #b0 #b0) res1y_70 res1x_70))
(define-fun sel2a_70 () bv (f2a res0a_70 res0b_70 res1a_70 res1b_70))
(define-fun sel2b_70 () bv (f2b res0a_70 res0b_70 res1a_70 res1b_70))
(assert (= #b0000000000000 (bvand sel2a_70 sel2b_70)))
(assert (= (btcnt sel2a_70) (btcnt sel2b_70)))
(define-fun res2x_70 () Bool (distinct #b0000000000000 (bvand sel2a_70 secret_70)))
(define-fun res2y_70 () Bool (distinct #b0000000000000 (bvand sel2b_70 secret_70)))
(define-fun res2a_70 () Bool (ite (= #b0 #b0) res2x_70 res2y_70))
(define-fun res2b_70 () Bool (ite (= #b0 #b0) res2y_70 res2x_70))
(define-fun sel3a_70 () bv (f3a res0a_70 res0b_70 res1a_70 res1b_70 res2a_70 res2b_70))
(define-fun sel3b_70 () Bool (f3b res0a_70 res0b_70 res1a_70 res1b_70 res2a_70 res2b_70))
(assert (= sel3b_70 (= #b1 #b0)))
(define-fun result_70 () bv sel3a_70)
(assert (= result_70 secret_70))

(define-fun secret_71 () bv #b0000010000000)
(define-fun sel0a_71 () bv (f0a))
(define-fun sel0b_71 () bv (f0b))
(assert (= #b0000000000000 (bvand sel0a_71 sel0b_71)))
(assert (= (btcnt sel0a_71) (btcnt sel0b_71)))
(define-fun res0x_71 () Bool (distinct #b0000000000000 (bvand sel0a_71 secret_71)))
(define-fun res0y_71 () Bool (distinct #b0000000000000 (bvand sel0b_71 secret_71)))
(define-fun res0a_71 () Bool (ite (= #b0 #b1) res0x_71 res0y_71))
(define-fun res0b_71 () Bool (ite (= #b0 #b1) res0y_71 res0x_71))
(define-fun sel1a_71 () bv (f1a res0a_71 res0b_71))
(define-fun sel1b_71 () bv (f1b res0a_71 res0b_71))
(assert (= #b0000000000000 (bvand sel1a_71 sel1b_71)))
(assert (= (btcnt sel1a_71) (btcnt sel1b_71)))
(define-fun res1x_71 () Bool (distinct #b0000000000000 (bvand sel1a_71 secret_71)))
(define-fun res1y_71 () Bool (distinct #b0000000000000 (bvand sel1b_71 secret_71)))
(define-fun res1a_71 () Bool (ite (= #b0 #b1) res1x_71 res1y_71))
(define-fun res1b_71 () Bool (ite (= #b0 #b1) res1y_71 res1x_71))
(define-fun sel2a_71 () bv (f2a res0a_71 res0b_71 res1a_71 res1b_71))
(define-fun sel2b_71 () bv (f2b res0a_71 res0b_71 res1a_71 res1b_71))
(assert (= #b0000000000000 (bvand sel2a_71 sel2b_71)))
(assert (= (btcnt sel2a_71) (btcnt sel2b_71)))
(define-fun res2x_71 () Bool (distinct #b0000000000000 (bvand sel2a_71 secret_71)))
(define-fun res2y_71 () Bool (distinct #b0000000000000 (bvand sel2b_71 secret_71)))
(define-fun res2a_71 () Bool (ite (= #b0 #b1) res2x_71 res2y_71))
(define-fun res2b_71 () Bool (ite (= #b0 #b1) res2y_71 res2x_71))
(define-fun sel3a_71 () bv (f3a res0a_71 res0b_71 res1a_71 res1b_71 res2a_71 res2b_71))
(define-fun sel3b_71 () Bool (f3b res0a_71 res0b_71 res1a_71 res1b_71 res2a_71 res2b_71))
(assert (= sel3b_71 (= #b1 #b1)))
(define-fun result_71 () bv sel3a_71)
(assert (= result_71 secret_71))

(define-fun secret_80 () bv #b0000100000000)
(define-fun sel0a_80 () bv (f0a))
(define-fun sel0b_80 () bv (f0b))
(assert (= #b0000000000000 (bvand sel0a_80 sel0b_80)))
(assert (= (btcnt sel0a_80) (btcnt sel0b_80)))
(define-fun res0x_80 () Bool (distinct #b0000000000000 (bvand sel0a_80 secret_80)))
(define-fun res0y_80 () Bool (distinct #b0000000000000 (bvand sel0b_80 secret_80)))
(define-fun res0a_80 () Bool (ite (= #b0 #b0) res0x_80 res0y_80))
(define-fun res0b_80 () Bool (ite (= #b0 #b0) res0y_80 res0x_80))
(define-fun sel1a_80 () bv (f1a res0a_80 res0b_80))
(define-fun sel1b_80 () bv (f1b res0a_80 res0b_80))
(assert (= #b0000000000000 (bvand sel1a_80 sel1b_80)))
(assert (= (btcnt sel1a_80) (btcnt sel1b_80)))
(define-fun res1x_80 () Bool (distinct #b0000000000000 (bvand sel1a_80 secret_80)))
(define-fun res1y_80 () Bool (distinct #b0000000000000 (bvand sel1b_80 secret_80)))
(define-fun res1a_80 () Bool (ite (= #b0 #b0) res1x_80 res1y_80))
(define-fun res1b_80 () Bool (ite (= #b0 #b0) res1y_80 res1x_80))
(define-fun sel2a_80 () bv (f2a res0a_80 res0b_80 res1a_80 res1b_80))
(define-fun sel2b_80 () bv (f2b res0a_80 res0b_80 res1a_80 res1b_80))
(assert (= #b0000000000000 (bvand sel2a_80 sel2b_80)))
(assert (= (btcnt sel2a_80) (btcnt sel2b_80)))
(define-fun res2x_80 () Bool (distinct #b0000000000000 (bvand sel2a_80 secret_80)))
(define-fun res2y_80 () Bool (distinct #b0000000000000 (bvand sel2b_80 secret_80)))
(define-fun res2a_80 () Bool (ite (= #b0 #b0) res2x_80 res2y_80))
(define-fun res2b_80 () Bool (ite (= #b0 #b0) res2y_80 res2x_80))
(define-fun sel3a_80 () bv (f3a res0a_80 res0b_80 res1a_80 res1b_80 res2a_80 res2b_80))
(define-fun sel3b_80 () Bool (f3b res0a_80 res0b_80 res1a_80 res1b_80 res2a_80 res2b_80))
(assert (= sel3b_80 (= #b1 #b0)))
(define-fun result_80 () bv sel3a_80)
(assert (= result_80 secret_80))

(define-fun secret_81 () bv #b0000100000000)
(define-fun sel0a_81 () bv (f0a))
(define-fun sel0b_81 () bv (f0b))
(assert (= #b0000000000000 (bvand sel0a_81 sel0b_81)))
(assert (= (btcnt sel0a_81) (btcnt sel0b_81)))
(define-fun res0x_81 () Bool (distinct #b0000000000000 (bvand sel0a_81 secret_81)))
(define-fun res0y_81 () Bool (distinct #b0000000000000 (bvand sel0b_81 secret_81)))
(define-fun res0a_81 () Bool (ite (= #b0 #b1) res0x_81 res0y_81))
(define-fun res0b_81 () Bool (ite (= #b0 #b1) res0y_81 res0x_81))
(define-fun sel1a_81 () bv (f1a res0a_81 res0b_81))
(define-fun sel1b_81 () bv (f1b res0a_81 res0b_81))
(assert (= #b0000000000000 (bvand sel1a_81 sel1b_81)))
(assert (= (btcnt sel1a_81) (btcnt sel1b_81)))
(define-fun res1x_81 () Bool (distinct #b0000000000000 (bvand sel1a_81 secret_81)))
(define-fun res1y_81 () Bool (distinct #b0000000000000 (bvand sel1b_81 secret_81)))
(define-fun res1a_81 () Bool (ite (= #b0 #b1) res1x_81 res1y_81))
(define-fun res1b_81 () Bool (ite (= #b0 #b1) res1y_81 res1x_81))
(define-fun sel2a_81 () bv (f2a res0a_81 res0b_81 res1a_81 res1b_81))
(define-fun sel2b_81 () bv (f2b res0a_81 res0b_81 res1a_81 res1b_81))
(assert (= #b0000000000000 (bvand sel2a_81 sel2b_81)))
(assert (= (btcnt sel2a_81) (btcnt sel2b_81)))
(define-fun res2x_81 () Bool (distinct #b0000000000000 (bvand sel2a_81 secret_81)))
(define-fun res2y_81 () Bool (distinct #b0000000000000 (bvand sel2b_81 secret_81)))
(define-fun res2a_81 () Bool (ite (= #b0 #b1) res2x_81 res2y_81))
(define-fun res2b_81 () Bool (ite (= #b0 #b1) res2y_81 res2x_81))
(define-fun sel3a_81 () bv (f3a res0a_81 res0b_81 res1a_81 res1b_81 res2a_81 res2b_81))
(define-fun sel3b_81 () Bool (f3b res0a_81 res0b_81 res1a_81 res1b_81 res2a_81 res2b_81))
(assert (= sel3b_81 (= #b1 #b1)))
(define-fun result_81 () bv sel3a_81)
(assert (= result_81 secret_81))

(define-fun secret_90 () bv #b0001000000000)
(define-fun sel0a_90 () bv (f0a))
(define-fun sel0b_90 () bv (f0b))
(assert (= #b0000000000000 (bvand sel0a_90 sel0b_90)))
(assert (= (btcnt sel0a_90) (btcnt sel0b_90)))
(define-fun res0x_90 () Bool (distinct #b0000000000000 (bvand sel0a_90 secret_90)))
(define-fun res0y_90 () Bool (distinct #b0000000000000 (bvand sel0b_90 secret_90)))
(define-fun res0a_90 () Bool (ite (= #b0 #b0) res0x_90 res0y_90))
(define-fun res0b_90 () Bool (ite (= #b0 #b0) res0y_90 res0x_90))
(define-fun sel1a_90 () bv (f1a res0a_90 res0b_90))
(define-fun sel1b_90 () bv (f1b res0a_90 res0b_90))
(assert (= #b0000000000000 (bvand sel1a_90 sel1b_90)))
(assert (= (btcnt sel1a_90) (btcnt sel1b_90)))
(define-fun res1x_90 () Bool (distinct #b0000000000000 (bvand sel1a_90 secret_90)))
(define-fun res1y_90 () Bool (distinct #b0000000000000 (bvand sel1b_90 secret_90)))
(define-fun res1a_90 () Bool (ite (= #b0 #b0) res1x_90 res1y_90))
(define-fun res1b_90 () Bool (ite (= #b0 #b0) res1y_90 res1x_90))
(define-fun sel2a_90 () bv (f2a res0a_90 res0b_90 res1a_90 res1b_90))
(define-fun sel2b_90 () bv (f2b res0a_90 res0b_90 res1a_90 res1b_90))
(assert (= #b0000000000000 (bvand sel2a_90 sel2b_90)))
(assert (= (btcnt sel2a_90) (btcnt sel2b_90)))
(define-fun res2x_90 () Bool (distinct #b0000000000000 (bvand sel2a_90 secret_90)))
(define-fun res2y_90 () Bool (distinct #b0000000000000 (bvand sel2b_90 secret_90)))
(define-fun res2a_90 () Bool (ite (= #b0 #b0) res2x_90 res2y_90))
(define-fun res2b_90 () Bool (ite (= #b0 #b0) res2y_90 res2x_90))
(define-fun sel3a_90 () bv (f3a res0a_90 res0b_90 res1a_90 res1b_90 res2a_90 res2b_90))
(define-fun sel3b_90 () Bool (f3b res0a_90 res0b_90 res1a_90 res1b_90 res2a_90 res2b_90))
(assert (= sel3b_90 (= #b1 #b0)))
(define-fun result_90 () bv sel3a_90)
(assert (= result_90 secret_90))

(define-fun secret_91 () bv #b0001000000000)
(define-fun sel0a_91 () bv (f0a))
(define-fun sel0b_91 () bv (f0b))
(assert (= #b0000000000000 (bvand sel0a_91 sel0b_91)))
(assert (= (btcnt sel0a_91) (btcnt sel0b_91)))
(define-fun res0x_91 () Bool (distinct #b0000000000000 (bvand sel0a_91 secret_91)))
(define-fun res0y_91 () Bool (distinct #b0000000000000 (bvand sel0b_91 secret_91)))
(define-fun res0a_91 () Bool (ite (= #b0 #b1) res0x_91 res0y_91))
(define-fun res0b_91 () Bool (ite (= #b0 #b1) res0y_91 res0x_91))
(define-fun sel1a_91 () bv (f1a res0a_91 res0b_91))
(define-fun sel1b_91 () bv (f1b res0a_91 res0b_91))
(assert (= #b0000000000000 (bvand sel1a_91 sel1b_91)))
(assert (= (btcnt sel1a_91) (btcnt sel1b_91)))
(define-fun res1x_91 () Bool (distinct #b0000000000000 (bvand sel1a_91 secret_91)))
(define-fun res1y_91 () Bool (distinct #b0000000000000 (bvand sel1b_91 secret_91)))
(define-fun res1a_91 () Bool (ite (= #b0 #b1) res1x_91 res1y_91))
(define-fun res1b_91 () Bool (ite (= #b0 #b1) res1y_91 res1x_91))
(define-fun sel2a_91 () bv (f2a res0a_91 res0b_91 res1a_91 res1b_91))
(define-fun sel2b_91 () bv (f2b res0a_91 res0b_91 res1a_91 res1b_91))
(assert (= #b0000000000000 (bvand sel2a_91 sel2b_91)))
(assert (= (btcnt sel2a_91) (btcnt sel2b_91)))
(define-fun res2x_91 () Bool (distinct #b0000000000000 (bvand sel2a_91 secret_91)))
(define-fun res2y_91 () Bool (distinct #b0000000000000 (bvand sel2b_91 secret_91)))
(define-fun res2a_91 () Bool (ite (= #b0 #b1) res2x_91 res2y_91))
(define-fun res2b_91 () Bool (ite (= #b0 #b1) res2y_91 res2x_91))
(define-fun sel3a_91 () bv (f3a res0a_91 res0b_91 res1a_91 res1b_91 res2a_91 res2b_91))
(define-fun sel3b_91 () Bool (f3b res0a_91 res0b_91 res1a_91 res1b_91 res2a_91 res2b_91))
(assert (= sel3b_91 (= #b1 #b1)))
(define-fun result_91 () bv sel3a_91)
(assert (= result_91 secret_91))

(define-fun secret_100 () bv #b0010000000000)
(define-fun sel0a_100 () bv (f0a))
(define-fun sel0b_100 () bv (f0b))
(assert (= #b0000000000000 (bvand sel0a_100 sel0b_100)))
(assert (= (btcnt sel0a_100) (btcnt sel0b_100)))
(define-fun res0x_100 () Bool (distinct #b0000000000000 (bvand sel0a_100 secret_100)))
(define-fun res0y_100 () Bool (distinct #b0000000000000 (bvand sel0b_100 secret_100)))
(define-fun res0a_100 () Bool (ite (= #b0 #b0) res0x_100 res0y_100))
(define-fun res0b_100 () Bool (ite (= #b0 #b0) res0y_100 res0x_100))
(define-fun sel1a_100 () bv (f1a res0a_100 res0b_100))
(define-fun sel1b_100 () bv (f1b res0a_100 res0b_100))
(assert (= #b0000000000000 (bvand sel1a_100 sel1b_100)))
(assert (= (btcnt sel1a_100) (btcnt sel1b_100)))
(define-fun res1x_100 () Bool (distinct #b0000000000000 (bvand sel1a_100 secret_100)))
(define-fun res1y_100 () Bool (distinct #b0000000000000 (bvand sel1b_100 secret_100)))
(define-fun res1a_100 () Bool (ite (= #b0 #b0) res1x_100 res1y_100))
(define-fun res1b_100 () Bool (ite (= #b0 #b0) res1y_100 res1x_100))
(define-fun sel2a_100 () bv (f2a res0a_100 res0b_100 res1a_100 res1b_100))
(define-fun sel2b_100 () bv (f2b res0a_100 res0b_100 res1a_100 res1b_100))
(assert (= #b0000000000000 (bvand sel2a_100 sel2b_100)))
(assert (= (btcnt sel2a_100) (btcnt sel2b_100)))
(define-fun res2x_100 () Bool (distinct #b0000000000000 (bvand sel2a_100 secret_100)))
(define-fun res2y_100 () Bool (distinct #b0000000000000 (bvand sel2b_100 secret_100)))
(define-fun res2a_100 () Bool (ite (= #b0 #b0) res2x_100 res2y_100))
(define-fun res2b_100 () Bool (ite (= #b0 #b0) res2y_100 res2x_100))
(define-fun sel3a_100 () bv (f3a res0a_100 res0b_100 res1a_100 res1b_100 res2a_100 res2b_100))
(define-fun sel3b_100 () Bool (f3b res0a_100 res0b_100 res1a_100 res1b_100 res2a_100 res2b_100))
(assert (= sel3b_100 (= #b1 #b0)))
(define-fun result_100 () bv sel3a_100)
(assert (= result_100 secret_100))

(define-fun secret_101 () bv #b0010000000000)
(define-fun sel0a_101 () bv (f0a))
(define-fun sel0b_101 () bv (f0b))
(assert (= #b0000000000000 (bvand sel0a_101 sel0b_101)))
(assert (= (btcnt sel0a_101) (btcnt sel0b_101)))
(define-fun res0x_101 () Bool (distinct #b0000000000000 (bvand sel0a_101 secret_101)))
(define-fun res0y_101 () Bool (distinct #b0000000000000 (bvand sel0b_101 secret_101)))
(define-fun res0a_101 () Bool (ite (= #b0 #b1) res0x_101 res0y_101))
(define-fun res0b_101 () Bool (ite (= #b0 #b1) res0y_101 res0x_101))
(define-fun sel1a_101 () bv (f1a res0a_101 res0b_101))
(define-fun sel1b_101 () bv (f1b res0a_101 res0b_101))
(assert (= #b0000000000000 (bvand sel1a_101 sel1b_101)))
(assert (= (btcnt sel1a_101) (btcnt sel1b_101)))
(define-fun res1x_101 () Bool (distinct #b0000000000000 (bvand sel1a_101 secret_101)))
(define-fun res1y_101 () Bool (distinct #b0000000000000 (bvand sel1b_101 secret_101)))
(define-fun res1a_101 () Bool (ite (= #b0 #b1) res1x_101 res1y_101))
(define-fun res1b_101 () Bool (ite (= #b0 #b1) res1y_101 res1x_101))
(define-fun sel2a_101 () bv (f2a res0a_101 res0b_101 res1a_101 res1b_101))
(define-fun sel2b_101 () bv (f2b res0a_101 res0b_101 res1a_101 res1b_101))
(assert (= #b0000000000000 (bvand sel2a_101 sel2b_101)))
(assert (= (btcnt sel2a_101) (btcnt sel2b_101)))
(define-fun res2x_101 () Bool (distinct #b0000000000000 (bvand sel2a_101 secret_101)))
(define-fun res2y_101 () Bool (distinct #b0000000000000 (bvand sel2b_101 secret_101)))
(define-fun res2a_101 () Bool (ite (= #b0 #b1) res2x_101 res2y_101))
(define-fun res2b_101 () Bool (ite (= #b0 #b1) res2y_101 res2x_101))
(define-fun sel3a_101 () bv (f3a res0a_101 res0b_101 res1a_101 res1b_101 res2a_101 res2b_101))
(define-fun sel3b_101 () Bool (f3b res0a_101 res0b_101 res1a_101 res1b_101 res2a_101 res2b_101))
(assert (= sel3b_101 (= #b1 #b1)))
(define-fun result_101 () bv sel3a_101)
(assert (= result_101 secret_101))

(define-fun secret_110 () bv #b0100000000000)
(define-fun sel0a_110 () bv (f0a))
(define-fun sel0b_110 () bv (f0b))
(assert (= #b0000000000000 (bvand sel0a_110 sel0b_110)))
(assert (= (btcnt sel0a_110) (btcnt sel0b_110)))
(define-fun res0x_110 () Bool (distinct #b0000000000000 (bvand sel0a_110 secret_110)))
(define-fun res0y_110 () Bool (distinct #b0000000000000 (bvand sel0b_110 secret_110)))
(define-fun res0a_110 () Bool (ite (= #b0 #b0) res0x_110 res0y_110))
(define-fun res0b_110 () Bool (ite (= #b0 #b0) res0y_110 res0x_110))
(define-fun sel1a_110 () bv (f1a res0a_110 res0b_110))
(define-fun sel1b_110 () bv (f1b res0a_110 res0b_110))
(assert (= #b0000000000000 (bvand sel1a_110 sel1b_110)))
(assert (= (btcnt sel1a_110) (btcnt sel1b_110)))
(define-fun res1x_110 () Bool (distinct #b0000000000000 (bvand sel1a_110 secret_110)))
(define-fun res1y_110 () Bool (distinct #b0000000000000 (bvand sel1b_110 secret_110)))
(define-fun res1a_110 () Bool (ite (= #b0 #b0) res1x_110 res1y_110))
(define-fun res1b_110 () Bool (ite (= #b0 #b0) res1y_110 res1x_110))
(define-fun sel2a_110 () bv (f2a res0a_110 res0b_110 res1a_110 res1b_110))
(define-fun sel2b_110 () bv (f2b res0a_110 res0b_110 res1a_110 res1b_110))
(assert (= #b0000000000000 (bvand sel2a_110 sel2b_110)))
(assert (= (btcnt sel2a_110) (btcnt sel2b_110)))
(define-fun res2x_110 () Bool (distinct #b0000000000000 (bvand sel2a_110 secret_110)))
(define-fun res2y_110 () Bool (distinct #b0000000000000 (bvand sel2b_110 secret_110)))
(define-fun res2a_110 () Bool (ite (= #b0 #b0) res2x_110 res2y_110))
(define-fun res2b_110 () Bool (ite (= #b0 #b0) res2y_110 res2x_110))
(define-fun sel3a_110 () bv (f3a res0a_110 res0b_110 res1a_110 res1b_110 res2a_110 res2b_110))
(define-fun sel3b_110 () Bool (f3b res0a_110 res0b_110 res1a_110 res1b_110 res2a_110 res2b_110))
(assert (= sel3b_110 (= #b1 #b0)))
(define-fun result_110 () bv sel3a_110)
(assert (= result_110 secret_110))

(define-fun secret_111 () bv #b0100000000000)
(define-fun sel0a_111 () bv (f0a))
(define-fun sel0b_111 () bv (f0b))
(assert (= #b0000000000000 (bvand sel0a_111 sel0b_111)))
(assert (= (btcnt sel0a_111) (btcnt sel0b_111)))
(define-fun res0x_111 () Bool (distinct #b0000000000000 (bvand sel0a_111 secret_111)))
(define-fun res0y_111 () Bool (distinct #b0000000000000 (bvand sel0b_111 secret_111)))
(define-fun res0a_111 () Bool (ite (= #b0 #b1) res0x_111 res0y_111))
(define-fun res0b_111 () Bool (ite (= #b0 #b1) res0y_111 res0x_111))
(define-fun sel1a_111 () bv (f1a res0a_111 res0b_111))
(define-fun sel1b_111 () bv (f1b res0a_111 res0b_111))
(assert (= #b0000000000000 (bvand sel1a_111 sel1b_111)))
(assert (= (btcnt sel1a_111) (btcnt sel1b_111)))
(define-fun res1x_111 () Bool (distinct #b0000000000000 (bvand sel1a_111 secret_111)))
(define-fun res1y_111 () Bool (distinct #b0000000000000 (bvand sel1b_111 secret_111)))
(define-fun res1a_111 () Bool (ite (= #b0 #b1) res1x_111 res1y_111))
(define-fun res1b_111 () Bool (ite (= #b0 #b1) res1y_111 res1x_111))
(define-fun sel2a_111 () bv (f2a res0a_111 res0b_111 res1a_111 res1b_111))
(define-fun sel2b_111 () bv (f2b res0a_111 res0b_111 res1a_111 res1b_111))
(assert (= #b0000000000000 (bvand sel2a_111 sel2b_111)))
(assert (= (btcnt sel2a_111) (btcnt sel2b_111)))
(define-fun res2x_111 () Bool (distinct #b0000000000000 (bvand sel2a_111 secret_111)))
(define-fun res2y_111 () Bool (distinct #b0000000000000 (bvand sel2b_111 secret_111)))
(define-fun res2a_111 () Bool (ite (= #b0 #b1) res2x_111 res2y_111))
(define-fun res2b_111 () Bool (ite (= #b0 #b1) res2y_111 res2x_111))
(define-fun sel3a_111 () bv (f3a res0a_111 res0b_111 res1a_111 res1b_111 res2a_111 res2b_111))
(define-fun sel3b_111 () Bool (f3b res0a_111 res0b_111 res1a_111 res1b_111 res2a_111 res2b_111))
(assert (= sel3b_111 (= #b1 #b1)))
(define-fun result_111 () bv sel3a_111)
(assert (= result_111 secret_111))

(define-fun secret_120 () bv #b1000000000000)
(define-fun sel0a_120 () bv (f0a))
(define-fun sel0b_120 () bv (f0b))
(assert (= #b0000000000000 (bvand sel0a_120 sel0b_120)))
(assert (= (btcnt sel0a_120) (btcnt sel0b_120)))
(define-fun res0x_120 () Bool (distinct #b0000000000000 (bvand sel0a_120 secret_120)))
(define-fun res0y_120 () Bool (distinct #b0000000000000 (bvand sel0b_120 secret_120)))
(define-fun res0a_120 () Bool (ite (= #b0 #b0) res0x_120 res0y_120))
(define-fun res0b_120 () Bool (ite (= #b0 #b0) res0y_120 res0x_120))
(define-fun sel1a_120 () bv (f1a res0a_120 res0b_120))
(define-fun sel1b_120 () bv (f1b res0a_120 res0b_120))
(assert (= #b0000000000000 (bvand sel1a_120 sel1b_120)))
(assert (= (btcnt sel1a_120) (btcnt sel1b_120)))
(define-fun res1x_120 () Bool (distinct #b0000000000000 (bvand sel1a_120 secret_120)))
(define-fun res1y_120 () Bool (distinct #b0000000000000 (bvand sel1b_120 secret_120)))
(define-fun res1a_120 () Bool (ite (= #b0 #b0) res1x_120 res1y_120))
(define-fun res1b_120 () Bool (ite (= #b0 #b0) res1y_120 res1x_120))
(define-fun sel2a_120 () bv (f2a res0a_120 res0b_120 res1a_120 res1b_120))
(define-fun sel2b_120 () bv (f2b res0a_120 res0b_120 res1a_120 res1b_120))
(assert (= #b0000000000000 (bvand sel2a_120 sel2b_120)))
(assert (= (btcnt sel2a_120) (btcnt sel2b_120)))
(define-fun res2x_120 () Bool (distinct #b0000000000000 (bvand sel2a_120 secret_120)))
(define-fun res2y_120 () Bool (distinct #b0000000000000 (bvand sel2b_120 secret_120)))
(define-fun res2a_120 () Bool (ite (= #b0 #b0) res2x_120 res2y_120))
(define-fun res2b_120 () Bool (ite (= #b0 #b0) res2y_120 res2x_120))
(define-fun sel3a_120 () bv (f3a res0a_120 res0b_120 res1a_120 res1b_120 res2a_120 res2b_120))
(define-fun sel3b_120 () Bool (f3b res0a_120 res0b_120 res1a_120 res1b_120 res2a_120 res2b_120))
(define-fun result_120 () bv sel3a_120)
(assert (= result_120 secret_120))

(define-fun secret_121 () bv #b1000000000000)
(define-fun sel0a_121 () bv (f0a))
(define-fun sel0b_121 () bv (f0b))
(assert (= #b0000000000000 (bvand sel0a_121 sel0b_121)))
(assert (= (btcnt sel0a_121) (btcnt sel0b_121)))
(define-fun res0x_121 () Bool (distinct #b0000000000000 (bvand sel0a_121 secret_121)))
(define-fun res0y_121 () Bool (distinct #b0000000000000 (bvand sel0b_121 secret_121)))
(define-fun res0a_121 () Bool (ite (= #b0 #b1) res0x_121 res0y_121))
(define-fun res0b_121 () Bool (ite (= #b0 #b1) res0y_121 res0x_121))
(define-fun sel1a_121 () bv (f1a res0a_121 res0b_121))
(define-fun sel1b_121 () bv (f1b res0a_121 res0b_121))
(assert (= #b0000000000000 (bvand sel1a_121 sel1b_121)))
(assert (= (btcnt sel1a_121) (btcnt sel1b_121)))
(define-fun res1x_121 () Bool (distinct #b0000000000000 (bvand sel1a_121 secret_121)))
(define-fun res1y_121 () Bool (distinct #b0000000000000 (bvand sel1b_121 secret_121)))
(define-fun res1a_121 () Bool (ite (= #b0 #b1) res1x_121 res1y_121))
(define-fun res1b_121 () Bool (ite (= #b0 #b1) res1y_121 res1x_121))
(define-fun sel2a_121 () bv (f2a res0a_121 res0b_121 res1a_121 res1b_121))
(define-fun sel2b_121 () bv (f2b res0a_121 res0b_121 res1a_121 res1b_121))
(assert (= #b0000000000000 (bvand sel2a_121 sel2b_121)))
(assert (= (btcnt sel2a_121) (btcnt sel2b_121)))
(define-fun res2x_121 () Bool (distinct #b0000000000000 (bvand sel2a_121 secret_121)))
(define-fun res2y_121 () Bool (distinct #b0000000000000 (bvand sel2b_121 secret_121)))
(define-fun res2a_121 () Bool (ite (= #b0 #b1) res2x_121 res2y_121))
(define-fun res2b_121 () Bool (ite (= #b0 #b1) res2y_121 res2x_121))
(define-fun sel3a_121 () bv (f3a res0a_121 res0b_121 res1a_121 res1b_121 res2a_121 res2b_121))
(define-fun sel3b_121 () Bool (f3b res0a_121 res0b_121 res1a_121 res1b_121 res2a_121 res2b_121))
(define-fun result_121 () bv sel3a_121)
(assert (= result_121 secret_121))

(define-fun validoutpair ((p bv) (q bv)) Bool (or (= p q) (= p (bvlshr q #b0000000000001))))
(assert (validoutpair (f3a T F T F T F) (f3a T F T F F F)))
(assert (= (f3a T F T F T F) (f3a F T F T F T)))
(assert (validoutpair (f3a T F T F F F) (f3a T F T F F T)))
(assert (= (f3a T F T F F F) (f3a F T F T F F)))
(assert (validoutpair (f3a T F T F F T) (f3a T F F F T F)))
(assert (= (f3a T F T F F T) (f3a F T F T T F)))
(assert (validoutpair (f3a T F F F T F) (f3a T F F F F F)))
(assert (= (f3a T F F F T F) (f3a F T F F F T)))
(assert (validoutpair (f3a T F F F F F) (f3a T F F F F T)))
(assert (= (f3a T F F F F F) (f3a F T F F F F)))
(assert (validoutpair (f3a T F F F F T) (f3a T F F T T F)))
(assert (= (f3a T F F F F T) (f3a F T F F T F)))
(assert (validoutpair (f3a T F F T T F) (f3a T F F T F F)))
(assert (= (f3a T F F T T F) (f3a F T T F F T)))
(assert (validoutpair (f3a T F F T F F) (f3a T F F T F T)))
(assert (= (f3a T F F T F F) (f3a F T T F F F)))
(assert (validoutpair (f3a T F F T F T) (f3a F F T F T F)))
(assert (= (f3a T F F T F T) (f3a F T T F T F)))
(assert (validoutpair (f3a F F T F T F) (f3a F F T F F F)))
(assert (= (f3a F F T F T F) (f3a F F F T F T)))
(assert (validoutpair (f3a F F T F F F) (f3a F F T F F T)))
(assert (= (f3a F F T F F F) (f3a F F F T F F)))
(assert (validoutpair (f3a F F T F F T) (f3a F F F F T F)))
(assert (= (f3a F F T F F T) (f3a F F F T T F)))
(assert (validoutpair (f3a F F F F T F) (f3a F F F F F F)))
(assert (= (f3a F F F F T F) (f3a F F F F F T)))
(assert (= (f3a F F F F F F) #b1000000000000))
(assert (= (f2a T F T F) (f2a F T F T)))
(assert (= (f2b T F T F) (f2b F T F T)))
(assert (= (f2a T F F F) (f2a F T F F)))
(assert (= (f2b T F F F) (f2b F T F F)))
(assert (= (f2a T F F T) (f2a F T T F)))
(assert (= (f2b T F F T) (f2b F T T F)))
(assert (= (f1a T F) (f1a F T)))
(assert (= (f1b T F) (f1b F T)))
(assert (= (f2a F F T F) (f2a F F F T)))
(assert (= (f2b F F T F) (f2b F F F T)))

(assert (= f0a #b0000001010101))
(assert (= f0b #b0000010101010))

(assert (=
(btcnt (f1a F T))
(btcnt (f1a T F))
#b0000000000011
))

(assert (=
(btcnt (f1a F F))
#b0000000000010
))

(assert (=
(btcnt (f2a F F F F))
(btcnt (f2a F F F T))
(btcnt (f2a F F T F))
(btcnt (f2a F T F F))
(btcnt (f2a F T F T))
(btcnt (f2a F T T F))
(btcnt (f2a T F F F))
(btcnt (f2a T F F T))
(btcnt (f2a T F T F))
#b0000000000001
))

(assert (= (f3a F F F F F F) #b1000000000000))
(assert (= (f3a F F F F F T) (f3a F F F F T F) #b0100000000000))

(assert (= (f3a F F F T T F) (f3a F F T F F T) #b0010000000000))
(assert (= (f3a F F F T F F) (f3a F F T F F F) #b0001000000000))
(assert (= (f3a F F F T F T) (f3a F F T F T F) #b0000100000000))

(assert (= (f3a F T T F T F) (f3a T F F T F T) #b0000010000000))
(assert (= (f3a F T T F F F) (f3a T F F T F F) #b0000001000000))
(assert (= (f3a F T T F F T) (f3a T F F T T F) #b0000000100000))

(assert (= (f3a F T F F T F) (f3a T F F F F T) #b0000000010000))
(assert (= (f3a F T F F F F) (f3a T F F F F F) #b0000000001000))
(assert (= (f3a F T F F F T) (f3a T F F F T F) #b0000000000100))

(assert (= (f3a F T F T T F) (f3a T F T F F T) #b0000000000010))
(assert (= (f3a F T F T F F) (f3a T F T F F F) #b0000000000001))
(assert (= (f3a F T F T F T) (f3a T F T F T F) #b0000000000000))
(assert (= (bvand (f0a) #b1000000000000) #b0000000000000))
(assert (= (bvand (f0b) #b1000000000000) #b0000000000000))
(assert (= (bvand (f1a F F) #b1000000000000) #b0000000000000))
(assert (= (bvand (f1b F F) #b1000000000000) #b0000000000000))
(assert (= (bvand (f2a F F F F) #b1000000000000) #b0000000000000))
(assert (= (bvand (f2b F F F F) #b1000000000000) #b0000000000000))
(assert (= (bvand (f2a F F F T) #b1000000000000) #b0000000000000))
(assert (= (bvand (f2b F F F T) #b1000000000000) #b0000000000000))
(assert (= (bvand (f2a F F T F) #b1000000000000) #b0000000000000))
(assert (= (bvand (f2b F F T F) #b1000000000000) #b0000000000000))
(assert (= (bvand (f1a F T) #b1000000000000) #b0000000000000))
(assert (= (bvand (f1b F T) #b1000000000000) #b0000000000000))
(assert (= (bvand (f2a F T F F) #b1000000000000) #b0000000000000))
(assert (= (bvand (f2b F T F F) #b1000000000000) #b0000000000000))
(assert (= (bvand (f2a F T F T) #b1000000000000) #b0000000000000))
(assert (= (bvand (f2b F T F T) #b1000000000000) #b0000000000000))
(assert (= (bvand (f2a F T T F) #b1000000000000) #b0000000000000))
(assert (= (bvand (f2b F T T F) #b1000000000000) #b0000000000000))
(assert (= (bvand (f1a T F) #b1000000000000) #b0000000000000))
(assert (= (bvand (f1b T F) #b1000000000000) #b0000000000000))
(assert (= (bvand (f2a T F F F) #b1000000000000) #b0000000000000))
(assert (= (bvand (f2b T F F F) #b1000000000000) #b0000000000000))
(assert (= (bvand (f2a T F F T) #b1000000000000) #b0000000000000))
(assert (= (bvand (f2b T F F T) #b1000000000000) #b0000000000000))
(assert (= (bvand (f2a T F T F) #b1000000000000) #b0000000000000))
(assert (= (bvand (f2b T F T F) #b1000000000000) #b0000000000000))

(check-sat)
(get-model)
(get-value (
(f0a)
(f0b)
(f1a F F)
(f1b F F)
(f2a F F F F)
(f2b F F F F)
(f3a F F F F F F)
(f3a F F F F F T)
(f3a F F F F T F)
(f2a F F F T)
(f2b F F F T)
(f3a F F F T F F)
(f3a F F F T F T)
(f3a F F F T T F)
(f2a F F T F)
(f2b F F T F)
(f3a F F T F F F)
(f3a F F T F F T)
(f3a F F T F T F)
(f1a F T)
(f1b F T)
(f2a F T F F)
(f2b F T F F)
(f3a F T F F F F)
(f3a F T F F F T)
(f3a F T F F T F)
(f2a F T F T)
(f2b F T F T)
(f3a F T F T F F)
(f3a F T F T F T)
(f3a F T F T T F)
(f2a F T T F)
(f2b F T T F)
(f3a F T T F F F)
(f3a F T T F F T)
(f3a F T T F T F)
(f1a T F)
(f1b T F)
(f2a T F F F)
(f2b T F F F)
(f3a T F F F F F)
(f3a T F F F F T)
(f3a T F F F T F)
(f2a T F F T)
(f2b T F F T)
(f3a T F F T F F)
(f3a T F F T F T)
(f3a T F F T T F)
(f2a T F T F)
(f2b T F T F)
(f3a T F T F F F)
(f3a T F T F F T)
(f3a T F T F T F)
))
