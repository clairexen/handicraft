
This is a simple synthesic compiler benchmark for bit manipulation operations.

This is essentially all the code I could easily grab from three famous websites
with code snippets for bit manipulations:

 - http://aggregate.org/MAGIC/
 - http://graphics.stanford.edu/~seander/bithacks.html
 - http://programming.sirrida.de/bit_perm.html

Additionally I included the single compilation-unit versions of bzip2 and
oggenc from the following website:

 - http://people.csail.mit.edu/smcc/projects/single-file-programs/

The script notneg.py searches for "not" and "neg" instructions in the RISC-V
assembler code generated by GCC for the various benchmarks and analyses their
theoretical fusability with other instructions in the same code snippet.

